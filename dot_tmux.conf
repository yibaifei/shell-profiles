## Change escape to c-a
#set -g prefix C-a
#unbind-key C-b
#bind-key a send-prefix
#
## set -g mouse off
#
## 重新加载配置文件
#bind r source-file ~/.tmux.conf \; display "配置文件已经重新加载！"
#
## 设置默认 Shell 为 zsh
#set -g default-shell /bin/zsh
#
## 快捷键采用 vi 模式
#setw -g mode-keys vi
#
## Use xterm function key sequence
#setw -g xterm-keys on
#
## Notifying if other windows has activities
#set -g visual-activity off
#setw -g monitor-activity on
#
## disable automatic-rename
#setw -g automatic-rename off
#setw -g allow-rename off
#
## Altscreen
#setw -g alternate-screen on
#
## Lock screen after 5 minutes
## set -g lock-server on
## set -g lock-command "cmatrix -s -b"
## set -g lock-after-time 1800
#
## Terminal overrides
##set -g terminal-overrides "*88col*:colors=88,*256col*:colors=256,xterm*:colors=256"
##set -g default-terminal "xterm-256color"
#
## 设置信息显示时间
#set-option -g display-time 1000
#set-option -g message-attr bold
#set-option -g message-fg brightyellow
#set-option -g message-bg red
#
########### 状态栏设置
##
## 设置状态栏的内容和样式
#
## 每隔 10 秒刷新一次状态栏
#set -g status-interval 10
#set -g status-justify left
## 注意下面这里不要写 set -g status-style "bg=blue" 因为老版本不支持
#set -g status-bg blue
##set -g status-left "#[fg=red,bold] #H #[fg=brightmagenta]%m-%d %H:%M #[fg=brightred]| "
#set -g status-left "#[fg=red,bold] #H #[fg=brightmagenta] #[fg=brightred]| "
#set -g status-left-length 32
#set -g status-right-length 32
##set -g status-right "#[fg=brightblack,bold] #H #[fg=brightgreen]%m-%d %H:%M #[fg=brightblack]| "
#set -g status-right "#[fg=brightgreen]| #F#P #(echo $WFF_TEST)|"
#setw -g window-status-format '#[fg=white]#I-#[default]#[fg=brightgreen]#W#[default]'
#setw -g window-status-current-format '#[fg=brightyellow]#I-#W#[default]'
## setw -g window-status-last-style '#[fg=red]#I--#T#[default]'
##setw -g window-status-bell-attr bold,brightred
#setw -g window-status-bell-fg red
#setw -g window-status-bell-bg default
## setw -g window-status-content-attr bold,reverse
## setw -g window-status-content-fg cyan
## setw -g window-status-content-bg default
## setw -g window-status-activity-style fg=yellow,bold,reverse,bg=default
#
########### 窗口管理
##
## 窗口的索引值从 0 开始
#set -g base-index 1
## 关闭中间的会自动重新编号
## set -g renumber-windows on
#
## 类似于 screen，用 Ctrl+C 创建窗口
#bind-key C-c new-window
#
#set -g set-remain-on-exit on
#bind-key e respawn-pane /bin/zsh
#
## Terminal emulator window title, set it to off so that we can use zsh to
## operate it
#setw -g automatic-rename on
#
## 通过 Ctrl+n / Ctrl+p 来切换窗口
#bind-key C-n next-window
#bind-key n next-window
#bind-key C-p previous-window
#bind-key p previous-window
#
## 快速在两个窗口之间切换
#bind-key C-a last-window
#unbind-key l
#bind-key l choose-window
#
########### 面板管理
##
#bind-key m display-pane
#bind-key C-m display-pane
#
#set -g display-panes-time 3000
#set -g display-panes-active-colour brightyellow
#set -g display-panes-colour red
#
## 通过 v 和 h 来切分窗口，或者更直观一些用 - 和 |
#unbind %
#unbind '"'
#bind | split-window -h
#bind i split-window -h
#bind - split-window -v
#bind v split-window -v -p 35
#
#if-shell "uname | grep -q Darwin" "set-option -g default-command 'reattach-to-user-namespace -l zsh'"
#
## select pane
#bind k selectp -U # above (prefix k)
#bind j selectp -D # below (prefix j)
#bind h selectp -L # left (prefix h)
#bind l selectp -R # right (prefix l)
## bind / display-pane \; command-prompt -p "pane index" "select-pane -t '%%'"
#
## resize pane
#bind -r ^k resizep -U # upward (prefix Ctrl+k)
#bind -r ^j resizep -D # downward (prefix Ctrl+j)
#bind -r ^h resizep -L # to the left (prefix Ctrl+h)
#bind -r ^l resizep -R # to the right (prefix Ctrl+l)
#
## zoom current pane
#bind ^z run "tmux-zoom"
#
## kill pane (prefix q)
#bind q killp
## kill window (prefix Ctrl+q)
#bind ^q killw
## rotate-window
#bind b rotate-window
#bind u resize-pane -Z
#bind x command-prompt -p "resize pane x to: " "resize-pane -x '%%'"
#bind y command-prompt -p "resize pane y to: " "resize-pane -y '%%'"

# wff added.
set -g prefix C-a
unbind-key C-b
bind-key a send-prefix
bind r source-file ~/.tmux.conf \; display "config reloaded！"
setw -g mode-keys vi
setw -g xterm-keys on
set -g visual-activity off
setw -g monitor-activity on
setw -g alternate-screen on
set-option -g display-time 1000
set-option -g message-attr bold
set-option -g message-fg brightyellow
set-option -g message-bg red
set -g status-interval 10
set -g status-justify left
set -g status-bg blue
set -g status-left "#[fg=red,bold] #H #[fg=brightmagenta] #[fg=brightred]| "
set -g status-left-length 32
set -g status-right-length 32
set -g status-right "#[fg=brightgreen]| #(pwd) #F#P #(get-battery-percentage) |"
setw -g window-status-format '#[fg=green]#I-#W#[default]'
setw -g window-status-current-format '#[fg=brightyellow]#I-#W#[default]'
setw -g window-status-bell-attr bold,reverse
setw -g window-status-bell-fg red
setw -g window-status-bell-bg default
set -g base-index 0
bind-key C-c new-window
setw -g automatic-rename on
bind-key C-n next-window
bind-key n next-window
bind-key C-p previous-window
bind-key p previous-window
bind-key C-a last-window
unbind-key l
bind-key l choose-window
bind-key m display-pane
bind-key C-m display-pane
set -g display-panes-time 3000
set -g display-panes-active-colour brightyellow
set -g display-panes-colour red
unbind %
unbind '"'
bind | split-window -h
bind i split-window -h
bind - split-window -v
bind v split-window -v
if-shell "uname | grep -q Darwin" "set-option -g default-command 'reattach-to-user-namespace -l zsh'"
bind k selectp -U # above (prefix k)
bind j selectp -D # below (prefix j)
bind h selectp -L # left (prefix h)
bind l selectp -R # right (prefix l)
bind -r ^k resizep -U # upward (prefix Ctrl+k)
bind -r ^j resizep -D # downward (prefix Ctrl+j)
bind -r ^h resizep -L # to the left (prefix Ctrl+h)
bind -r ^l resizep -R # to the right (prefix Ctrl+l)
bind ^z run "tmux-zoom"
bind q killp
bind ^q killw

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
